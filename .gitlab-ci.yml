# Basado entre otros en: https://dev.to/mpressen/rails-minitest-gitlab-ci-31ap

image: "ruby:3.2.2"

services:
  - name: vtamara/postgis-es_co:13.3-1
    alias: postgres

variables:
  CI: 'Si'
  NOKOGIRI_USE_SYSTEM_LIBRARIES: 'true'
  POSTGRES_DB: sivel2gen_pru
  POSTGRES_ENABLED: 'true'
  POSTGRES_HOST_AUTH_METHOD: trust
  POSTGRES_PASSWORD: ''
  POSTGRES_USER: runner
  RAILS_ENV: test

stages:
  - test

test:
  stage: test
  cache:
    paths:
      - apt-cache
      - node_modules
      - vendor/bundle
  before_script:
    - cat /etc/os-release
    - uname -a
    - whoami
    - echo "HOME=${HOME}"
    - pwd
    - which ruby
    - ruby -v
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -yy && apt-get install build-essential libpq-dev postgresql-client -y
    - apt install -y poppler-utils  # pdftoppm para presentar portada de anexo
    - which pdftoppm
    - curl -fsSL https://deb.nodesource.com/setup_18.x | bash - # https://www.linuxcapable.com/how-to-install-node-js-14-lts-16-npm-on-debian-11-bullseye/
    - apt install -y -qq nodejs
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq yarn
    - gem install bundler dotenv --no-document
    - bundle install --jobs $(nproc) "${FLAGS[@]}"
    - cd test/dummy
    - cp .env.gitlab .env
    - cp db/structure.sql db/structure.sql.copia 
    - sed -e 's/provider = libc,//g;s/SET default_table_access_method.*/-- &/g;s/SET transaction_timeout.*//g' db/structure.sql.copia > db/structure.sql 
    - cp ../../db/datos-basicas.sql ../../db/datos-basicas.sql.copia 
    - sed -e 's/provider = libc,//g;s/SET default_table_access_method.*/-- &/g;s/SET transaction_timeout.*//g' ../../db/datos-basicas.sql.copia > ../../db/datos-basicas.sql 
    - bin/rails db:drop db:create db:setup db:seed
    - bin/rails msip:indices
    - yarn
    - bin/rails msip:stimulus_motores
    - RAILS_ENV=test bin/rails assets:precompile
    - yarn add -D puppeteer
    - for i in `find ./test -name "*js" -type f -exec grep -l "puppeteer-core" {} ';'`; do echo "Remplazando p-c por p en $i"; sed -i -e 's/preparar,//g;import puppeteer from \"puppeteer-core\"/import puppeteer from \"puppeteer\";\nimport {preparar} from \".\/pgitlab.mjs\";/g' $i; cat $i; done
    - cd ../..
  script:
    - NOPRUEBAJS=1 bin/regresion.sh
    - export exit_code=$?
  after_script:
    - echo "exit_code=$exit_code"
    - exit $exit_code


include:
    - template: Security/Dependency-Scanning.gitlab-ci.yml
    - template: Security/SAST.gitlab-ci.yml
    - template: Security/Secret-Detection.gitlab-ci.yml
